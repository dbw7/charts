apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "powerdns.fullname" . }}
  labels:
  {{ include "powerdns.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "powerdns.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "powerdns.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "powerdns.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: change-ownership-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["bash", "-c", "/script/init-db.sh"]
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
            - name: pdns-init-db-script
              mountPath: /script/init-db.sh
              subPath: init-db.sh
            - name: pdns-persistent-storage
              mountPath: /var/lib/pdns
      {{- with .Values.global.pdnsIP}}
      hostNetwork: true
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-recursor
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.recursor_image.repository }}:{{ .Values.recursor_image.tag }}"
          imagePullPolicy: {{ .Values.recursor_image.pullPolicy }}
          {{- with .Values.volumeMounts.pdns_recursor }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.powerdns.recursor.port }}
              protocol: TCP
            - containerPort: {{ .Values.powerdns.recursor.port }}
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-auth
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.volumeMounts.pdns }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.zone.create }}
          lifecycle:
            postStart:
              exec:
                command: ["bash", "-c", "/script/configure.sh"]
      {{- end }}
          ports:
            - containerPort: {{ .Values.powerdns.webserver.port }}
              protocol: TCP
            - containerPort: {{ .Values.powerdns.auth.port }}
              protocol: TCP
            - containerPort: {{ .Values.powerdns.auth.port }}
              protocol: UDP
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.powerdns.webserver.port }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.powerdns.webserver.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

